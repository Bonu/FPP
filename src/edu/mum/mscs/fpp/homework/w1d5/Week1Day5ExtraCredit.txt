/**
 * Anagramming.java
 */
package edu.mum.mscs.fpp.homework.w1d5;

/**
 * 5.	Find the permutations of given word using recursion.(Anagramming)
	Example : Input : cat
		     Output : cat  cta  atc  act tca tac 
	output: 
	abc
	acb
	bac
	bca
	cab
	cba

 */
public class Anagramming {

	public void anagram(String s) {
		anagram("", s);
	}

	private void anagram(String prefix, String s) {
		int N = s.length();
		if (N == 0)
			System.out.println(prefix);
		else {
			for (int i = 0; i < N; i++)
				anagram(prefix + s.charAt(i),
						s.substring(0, i) + s.substring(i + 1, N));
		}

	}

	public static void main(String[] args) {
		Anagramming a = new Anagramming();
		a.anagram("abc");
	}

}
/**
 * ConversionRecursive
 */
package edu.mum.mscs.fpp.homework.w1d5;

/**
 *6.	Convert the digit input into words using recursion.
		Example :  Input : 562
		                   Output : Five Six Two
		output: 
		THREE FOUR FIVE SIX 
		
		 */

public class ConversionRecursive {

	public String[] numbers = {"ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE"};
	public static void main(String[] args) {
		
		ConversionRecursive cr = new ConversionRecursive();
		cr.convert(3456);
		
	}
	
	public void convert(int number){
		if(number > 0){
			convert(number/10);
			System.out.printf("%s ",numbers[(number%10)]);
		}
	}

}
